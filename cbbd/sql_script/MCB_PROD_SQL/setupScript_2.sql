CREATE TABLE MLEB_CORE.AVAILABLE_TO ( AVAILABLE_TO_ID NUMBER(10) NOT NULL, AVAILABLE_TO_NAME VARCHAR2(30 CHAR), CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), PRIMARY KEY (AVAILABLE_TO_ID) );
CREATE TABLE MLEB_CORE.ID_TYPE_REFERENCE ( ID_TYPE_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), ID_TYPE_DESC VARCHAR2(255 CHAR), ID_TYPE_NAME VARCHAR2(100 CHAR), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), PRIMARY KEY (ID_TYPE_ID) );
CREATE TABLE MLEB_CORE.MLEB_EMAIL_OUTBOX ( TRX_ID NUMBER(10) NOT NULL, CREADTE_DT TIMESTAMP(6), CREATE_BY VARCHAR2(255 CHAR), DATE_TO_SEND TIMESTAMP(6), EMAIL_CONTENT CLOB, STATUS CHAR(1 CHAR), TO_EMAIL_ID VARCHAR2(255 CHAR), PRIMARY KEY (TRX_ID) );
CREATE TABLE MLEB_CORE.MLEB_FUNCTION ( FUNCTION_ID NUMBER(10) NOT NULL, CORE_FUNCTION VARCHAR2(255 CHAR), CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), DISPATCH_URL VARCHAR2(255 CHAR), FUNCTION_CODE VARCHAR2(30 CHAR), FUNCTION_NAME VARCHAR2(100 CHAR), GROUP_ID NUMBER(10), IS_AUTHENTICATION_REQUIRED CHAR(1 CHAR), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), SYSTEM_ID NUMBER(10), VM_URL VARCHAR2(255 CHAR), PRIMARY KEY (FUNCTION_ID), CONSTRAINT SYS_C008290 UNIQUE (FUNCTION_CODE) );
CREATE TABLE MLEB_CORE.MLEB_FUNCTION_GROUP ( GROUP_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), GROUP_NAME VARCHAR2(100 CHAR), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), PRIMARY KEY (GROUP_ID) );
CREATE TABLE MLEB_CORE.MLEB_REF_DEVICE ( DEVICE_ID VARCHAR2(255 CHAR) NOT NULL, CREATED_DT TIMESTAMP(6) NOT NULL, IS_ACTIVE NUMBER(10) NOT NULL, MAKE VARCHAR2(50 CHAR), MODEL VARCHAR2(50 CHAR), SCREEN_HEIGHT_PX NUMBER(10), SCREEN_WITDTH_PX NUMBER(10), TYPE VARCHAR2(50 CHAR), USER_AGENT VARCHAR2(255 CHAR), PRIMARY KEY (DEVICE_ID) );
CREATE TABLE MLEB_CORE.MLEB_REF_LOCATION ( ROW_ID NUMBER(10) NOT NULL, ID VARCHAR2(255 CHAR), ADDRESS VARCHAR2(255 CHAR), ALTITUBE VARCHAR2(255 CHAR), CITY VARCHAR2(255 CHAR), COUNTRY VARCHAR2(255 CHAR), DATE_TIME TIMESTAMP(6) NOT NULL, LATITUDE VARCHAR2(255 CHAR), LONGITUDE VARCHAR2(255 CHAR), POSTCODE VARCHAR2(255 CHAR), STATE VARCHAR2(255 CHAR), TYPE VARCHAR2(255 CHAR), TRANSACTION_ID VARCHAR2(100 CHAR) NOT NULL, PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.MLEB_REQUEST_LOG ( TRANSACTION_ID VARCHAR2(100 CHAR) NOT NULL, BD_DISPATCH_URL VARCHAR2(255 CHAR), BD_VM_URL VARCHAR2(255 CHAR), COMMC_IP VARCHAR2(255 CHAR), DATE_TIME TIMESTAMP(6) NOT NULL, DEVICE_ID VARCHAR2(512 CHAR), LOCATION_COORDINATES VARCHAR2(512 CHAR), MSISDN VARCHAR2(100 CHAR), SERVICE_ID VARCHAR2(255 CHAR), SOURCE_IP VARCHAR2(255 CHAR), TIMESTAMP VARCHAR2(255 CHAR), USER_AGENT VARCHAR2(512 CHAR), USERNAME VARCHAR2(255 CHAR), PRIMARY KEY (TRANSACTION_ID) );
CREATE TABLE MLEB_CORE.MLEB_RESPONSE_LOG ( ROW_ID NUMBER(10) NOT NULL, DATE_TIME TIMESTAMP(6) NOT NULL, RESPONSE_CODE VARCHAR2(255 CHAR) NOT NULL, RESPONSE_MSG VARCHAR2(512 CHAR) NOT NULL, TIMESTAMP VARCHAR2(255 CHAR), TRANSACTION_ID VARCHAR2(100 CHAR) NOT NULL, PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.MLEB_SYSTEM ( SYSTEM_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), SYSTEM_NAME VARCHAR2(30 CHAR), PRIMARY KEY (SYSTEM_ID) );
CREATE TABLE MLEB_CORE.MLEB_SYSTEM_UNAVAILABILITY ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), SYSTEM_ID NUMBER(10), UNAVAILABLE_FROM_DT TIMESTAMP(6), UNAVAILABLE_TO_DT TIMESTAMP(6), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.MLEB_TRACK_LOG ( TRACK_LOG_ID NUMBER(10) NOT NULL, APPLICATION VARCHAR2(255 CHAR), DESCRIPTION VARCHAR2(255 CHAR), REQUEST_TIMESTAMP VARCHAR2(255 CHAR), RESPONSE_TIMESTAMP VARCHAR2(255 CHAR), SERVICE_ID VARCHAR2(255 CHAR), SERVICE_URL VARCHAR2(255 CHAR), SESSION_ID VARCHAR2(100 CHAR) NOT NULL, SOURCE_IP VARCHAR2(255 CHAR), STATUS VARCHAR2(255 CHAR), TRANSACTION_ID VARCHAR2(100 CHAR) NOT NULL, PRIMARY KEY (TRACK_LOG_ID) );
CREATE TABLE MLEB_CORE.MLEB_VERSION_CONTROL ( ROW_ID NUMBER(10) NOT NULL, APP_NAME VARCHAR2(255 CHAR) NOT NULL, STATUS VARCHAR2(255 CHAR), UPDATE_DATE TIMESTAMP(6) NOT NULL, VERSION VARCHAR2(255 CHAR), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.SECURITY_PASS_QUESTION ( QUESTION_ID NUMBER(10) NOT NULL, QUESTION_MSG VARCHAR2(160 CHAR), STATUS VARCHAR2(2 CHAR), PRIMARY KEY (QUESTION_ID) );
CREATE TABLE MLEB_CORE.SECURITY_POLICY ( SECURITY_POLICY_ID NUMBER(10) NOT NULL, ALLOW_JAILBREAK CHAR(1 CHAR), CONCURRENT_LOGIN CHAR(1 CHAR), CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), NOTIFCATION_TYPE VARCHAR2(255 CHAR), PASSWORD_ALLOWED_ATTEMPT NUMBER(10), PASSWORD_CONTAIN_CHAR CHAR(1 CHAR), PASSWORD_FORMAT CHAR(1 CHAR), PASSWORD_MAX_LENGTH NUMBER(10), PASSWORD_MIN_LENGTH NUMBER(10), PASSWORD_RECYCLABILITY CHAR(1 CHAR), PASSWORD_VALID_DURATION NUMBER(10), SESSION_TIMEOUT NUMBER(10), STATUS CHAR(1 CHAR), USER_ID_CONTAIN_CHAR CHAR(1 CHAR), USER_ID_FORMAT CHAR(1 CHAR), USER_ID_MAX_LENGTH NUMBER(10), USER_ID_MIN_LENGTH NUMBER(10), PRIMARY KEY (SECURITY_POLICY_ID) );
CREATE TABLE MLEB_CORE.SERIES_TOKEN ( SERIES VARCHAR2(255 CHAR) NOT NULL, ACTION VARCHAR2(255 CHAR), EXPIRY_DATE TIMESTAMP(6), LAST_USED TIMESTAMP(6), SESSIONVALUE VARCHAR2(255 CHAR), TOKEN_VALUE VARCHAR2(255 CHAR), USERNAME VARCHAR2(255 CHAR), PRIMARY KEY (SERIES) );
CREATE TABLE MLEB_CORE.TBL_MICB_REF_DEVICE ( DEVICE_ID VARCHAR2(255 CHAR) NOT NULL, CREATED_DT TIMESTAMP(6) NOT NULL, IS_ACTIVE NUMBER(10) NOT NULL, MAKE VARCHAR2(50 CHAR), MODEL VARCHAR2(50 CHAR), SCREEN_HEIGHT_PX NUMBER(10), SCREEN_WITDTH_PX NUMBER(10), TYPE VARCHAR2(50 CHAR), USER_AGENT VARCHAR2(255 CHAR), PRIMARY KEY (DEVICE_ID) );
CREATE TABLE MLEB_CORE.URI_FUNCTION_MAPPING ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), FUNCTION_ID NUMBER(10), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), URI VARCHAR2(255 CHAR), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_ACCESS_ROLE ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), ROLE_ID NUMBER(10), STATUS CHAR(1 CHAR), USER_SYSTEM_ID NUMBER(10), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_ADMINISTER ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), SYSTEM_ID NUMBER(10), USER_SYSTEM_ID NUMBER(10), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_ADVERTISER ( ROW_ID NUMBER(10) NOT NULL, ADVERTISER_ID NUMBER(10), ADVERTISER_MODE CHAR(1 CHAR), CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), USER_SYSTEM_ID NUMBER(10), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_CATEGORY ( USER_CAT_ID NUMBER(10) NOT NULL, CONCURRENT_LOGIN CHAR(1 CHAR), CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), USER_CAT_NAME VARCHAR2(30 CHAR), PRIMARY KEY (USER_CAT_ID) );
CREATE TABLE MLEB_CORE.USER_LOYALTY_PROGRAMME ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), LOYALTY_POINT_ID NUMBER(10), LOYALTY_POINT_MODE CHAR(1 CHAR), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), USER_SYSTEM_ID NUMBER(10), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_MERCHANT_CATEGORY ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MERCHANT_CAT_ID NUMBER(10), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), USER_SYSTEM_ID NUMBER(10), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_PASSWORD_AUDIT ( USER_PASSWORD_AUDIT_ID NUMBER(10) NOT NULL, CREATE_DT TIMESTAMP(6), OLD_PASSWORD VARCHAR2(40 CHAR), USER_ID VARCHAR2(40 CHAR) NOT NULL, PRIMARY KEY (USER_PASSWORD_AUDIT_ID) );
CREATE TABLE MLEB_CORE.USER_PROFILE ( USER_ID VARCHAR2(20 CHAR) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), DEPARTMENT VARCHAR2(30 CHAR), DIVISION VARCHAR2(30 CHAR), EFFECTIVE_DT TIMESTAMP(6), EMAIL VARCHAR2(100 CHAR), EXPIRY_DT TIMESTAMP(6), HAND_PHONE VARCHAR2(20 CHAR), ID_NUMBER VARCHAR2(20 CHAR), ID_TYPE_ID NUMBER(10), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), ORG_ID NUMBER(10), OTHER_PHONE VARCHAR2(20 CHAR), POSITION VARCHAR2(20 CHAR), SALUTATION VARCHAR2(20 CHAR), STATUS CHAR(1 CHAR), USER_CAT_ID NUMBER(10), USER_NAME VARCHAR2(50 CHAR), PRIMARY KEY (USER_ID) );
CREATE TABLE MLEB_CORE.USER_ROLE ( ROLE_ID NUMBER(10) NOT NULL, USER_CAT_ID NUMBER(10), CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), ORG_ID NUMBER(10), ROLE_DESC VARCHAR2(30 CHAR), ROLE_NAME VARCHAR2(51 CHAR), STATUS CHAR(1 CHAR), SYSTEM_ID NUMBER(10), PRIMARY KEY (ROLE_ID) );
CREATE TABLE MLEB_CORE.USER_ROLE_FUNCTION ( ROW_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), FUNCTION_ID NUMBER(10), MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), ROLE_ID NUMBER(10), STATUS CHAR(1 CHAR), PRIMARY KEY (ROW_ID) );
CREATE TABLE MLEB_CORE.USER_SYSTEM ( USER_SYSTEM_ID NUMBER(10) NOT NULL, CREATE_BY VARCHAR2(50 CHAR), CREATE_DT TIMESTAMP(6), EFFECTIVE_DT DATE, EXPIRY_DT DATE, MODIFY_BY VARCHAR2(50 CHAR), MODIFY_DT TIMESTAMP(6), STATUS CHAR(1 CHAR), SYSTEM_ID NUMBER(10), USER_ID VARCHAR2(20 CHAR), PRIMARY KEY (USER_SYSTEM_ID) );
CREATE TABLE MLEB_CORE.USR_INVALID_PWD ( USER_ID VARCHAR2(255 CHAR) NOT NULL, INVALID_ATTEMPT NUMBER(10), PRIMARY KEY (USER_ID) );
CREATE TABLE MLEB_CORE.USR_LAST_LOGIN ( ID NUMBER(10) NOT NULL, LAST_LOGIN_DT TIMESTAMP(6), USER_ID VARCHAR2(255 CHAR), USER_NAME VARCHAR2(255 CHAR), PRIMARY KEY (ID) );
CREATE TABLE MLEB_CORE.USR_PASSWORD ( ID NUMBER(10) NOT NULL, CREATE_DT TIMESTAMP(6), HASHED_PWD VARCHAR2(255 CHAR), HASHED_PWD_EXTRA VARCHAR2(255 CHAR), MODIFY_DT TIMESTAMP(6), USER_ID VARCHAR2(255 CHAR), PRIMARY KEY (ID), CONSTRAINT SYS_C008363 UNIQUE (USER_ID) );
ALTER TABLE MLEB_CORE.MLEB_REF_LOCATION ADD CONSTRAINT FKE642B2C475A0C1F7 FOREIGN KEY (TRANSACTION_ID) REFERENCES MLEB_CORE.MLEB_REQUEST_LOG (TRANSACTION_ID);
ALTER TABLE MLEB_CORE.MLEB_RESPONSE_LOG ADD CONSTRAINT FK44C2832975A0C1F7 FOREIGN KEY (TRANSACTION_ID) REFERENCES MLEB_CORE.MLEB_REQUEST_LOG (TRANSACTION_ID);